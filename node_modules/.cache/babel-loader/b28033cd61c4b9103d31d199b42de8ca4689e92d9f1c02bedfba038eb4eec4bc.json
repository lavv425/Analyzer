{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";export default function MonthlyInsertions(_ref){let{JsonObject,Highcharts,HighchartsReact}=_ref;let data={\"new_tickets\":JsonObject[\"new_tickets\"],\"tickets_pending\":JsonObject[\"tickets_pending\"],\"tickets_closed\":JsonObject[\"tickets_closed\"]};// Crea un oggetto per memorizzare i conteggi mensili\nlet conteggiMensili={};// Itera su ogni categoria di ticket\nfor(let category in data){// Itera su ogni ticket nella categoria\nfor(let ticket in data[category]){// Ottieni il mese e l'anno dal timestamp del ticket\nlet date=new Date(data[category][ticket]['date_time_insert']);let mese=date.toLocaleString('it-IT',{month:'long'});mese=mese.charAt(0).toUpperCase()+mese.slice(1);let anno=date.getFullYear();// Crea una chiave unica per l'anno e il mese\nlet chiave=\"\".concat(anno,\"-\").concat(('0'+(date.getMonth()+1)).slice(-2),\" \").concat(mese);if(!conteggiMensili[chiave]){conteggiMensili[chiave]=0;}// Incrementa il conteggio per il mese corrente\nconteggiMensili[chiave]++;}}// Ottieni un array delle chiavi dell'oggetto conteggiMensili e ordina l'array\nlet mesiOrdinati=Object.keys(conteggiMensili).sort();// Stampa i conteggi mensili in ordine\nlet mesi=[];for(let i=0;i<mesiOrdinati.length;i++){let chiave=mesiOrdinati[i];mesi[i]={};// Initialize mesi[i] as an object\nmesi[i]['mese']=\"\".concat(chiave.slice(8),\" \").concat(chiave.slice(0,4));mesi[i]['qta']=conteggiMensili[chiave];}const options={chart:{type:'bar'},title:{text:'Ticket inseriti per mese'},xAxis:{categories:mesi.map(mese=>mese.mese),title:{text:'Mese'}},yAxis:{min:0,title:{text:'Quantità'}},series:[{name:'Quantità',data:mesi.map(mese=>mese.qta)}],credits:{enabled:false},exporting:{enabled:true,menuItems:['downloadPNG','downloadJPEG','downloadPDF','downloadSVG']}};return/*#__PURE__*/_jsx(HighchartsReact,{highcharts:Highcharts,options:options});}","map":{"version":3,"names":["MonthlyInsertions","_ref","JsonObject","Highcharts","HighchartsReact","data","conteggiMensili","category","ticket","date","Date","mese","toLocaleString","month","charAt","toUpperCase","slice","anno","getFullYear","chiave","concat","getMonth","mesiOrdinati","Object","keys","sort","mesi","i","length","options","chart","type","title","text","xAxis","categories","map","yAxis","min","series","name","qta","credits","enabled","exporting","menuItems","_jsx","highcharts"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/projects/ticket/analyzer/src/Components/Stats/Graphs/AllNeeds/MonthlyInsertions.jsx"],"sourcesContent":["export default function MonthlyInsertions({ JsonObject, Highcharts, HighchartsReact }) {\n    let data = {\n        \"new_tickets\": JsonObject[\"new_tickets\"],\n        \"tickets_pending\": JsonObject[\"tickets_pending\"],\n        \"tickets_closed\": JsonObject[\"tickets_closed\"],\n    };\n    // Crea un oggetto per memorizzare i conteggi mensili\n    let conteggiMensili = {};\n\n    // Itera su ogni categoria di ticket\n    for (let category in data) {\n        // Itera su ogni ticket nella categoria\n        for (let ticket in data[category]) {\n            // Ottieni il mese e l'anno dal timestamp del ticket\n            let date = new Date(data[category][ticket]['date_time_insert']);\n            let mese = date.toLocaleString('it-IT', { month: 'long' });\n            mese = mese.charAt(0).toUpperCase() + mese.slice(1);\n            let anno = date.getFullYear();\n            // Crea una chiave unica per l'anno e il mese\n            let chiave = `${anno}-${('0' + (date.getMonth() + 1)).slice(-2)} ${mese}`;\n            if (!conteggiMensili[chiave]) {\n                conteggiMensili[chiave] = 0;\n            }\n            // Incrementa il conteggio per il mese corrente\n            conteggiMensili[chiave]++;\n        }\n    }\n    // Ottieni un array delle chiavi dell'oggetto conteggiMensili e ordina l'array\n    let mesiOrdinati = Object.keys(conteggiMensili).sort();\n    // Stampa i conteggi mensili in ordine\n    let mesi = [];\n    for (let i = 0; i < mesiOrdinati.length; i++) {\n        let chiave = mesiOrdinati[i];\n        mesi[i] = {}; // Initialize mesi[i] as an object\n        mesi[i]['mese'] = `${chiave.slice(8)} ${chiave.slice(0, 4)}`;\n        mesi[i]['qta'] = conteggiMensili[chiave];\n    }\n\n    const options = {\n        chart: {\n            type: 'bar'\n        },\n        title: {\n            text: 'Ticket inseriti per mese'\n        },\n        xAxis: {\n            categories: mesi.map(mese => mese.mese),\n            title: {\n                text: 'Mese'\n            }\n        },\n        yAxis: {\n            min: 0,\n            title: {\n                text: 'Quantità'\n            }\n        },\n        series: [{\n            name: 'Quantità',\n            data: mesi.map(mese => mese.qta)\n        }],\n        credits: {\n            enabled: false\n        },\n        exporting: {\n            enabled: true,\n            menuItems: ['downloadPNG', 'downloadJPEG', 'downloadPDF', 'downloadSVG',]\n        }\n    };\n\n    return (\n        <HighchartsReact\n            highcharts={Highcharts}\n            options={options}\n        />\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}